modelo <- kmeans (mds.analysis$species, 7)
modelo
modelo <- kmeans (mds.analysis$species, 7)
modelo
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = modelo$cluster), ggtheme = theme_minimal(), main="KMeans")
modelo <- kmeans (mds.analysis$species, 7)
modelo
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = modelo$cluster), ggtheme = theme_minimal(), main="KMeans")
km.res <- kmeans(socioeconomica, 7, nstart = 5000)
factoextra::fviz_cluster(km.res, data = socioeconomica, frame.type = "convex")
dist.2 <- vegdist(mds.analysis$species, method = "gower")
hclust.2 <- hclust(dist.2, method="ward.D2", members = NULL)
plot(hclust.2, main = "Dendrograma", cex=0.7, hang=0.8)
library(magrittr)
library(foreign)
coffee <- read.spss('datos/Coffee.sav', to.data.frame = T)
str(coffee)
print(coffee)
library(foreign)
coffee <- read.spss('datos/Coffee.sav', to.data.frame = T)
str(coffee)
print(coffee)
library("FactoMineR")
library("factoextra")
summary(coffee)
MCA(coffee, graph = T)
MCA(as.matrix(coffee), graph = T)
mca.3 <- MCA(as.matrix(coffee), graph = T)
print(mca.3)
model3 <- MCA (coffee[,1:2], graph = T, row.w = c(coffee$frec))
model3 <- MCA (coffee[,1:2], graph = T, row.w = coffee$frec)
model3 <- MCA (coffee[,1:2], graph = T, row.w = c(coffee$frec))
model3 <- MCA (coffee[,1:2], graph = T, row.w = coffee$frec, na.method = "Average")
model3 <- MCA (coffee[,1:2], graph = T, row.w = coffee$frec)
summary(modelo)
summary(model3)
model.3 <- MCA (coffee[,1:2], graph = T, row.w = coffee$frec)
model.3 <- MCA (coffee[,1], graph = T, quali.sup = coffee[,2] row.w = coffee$frec)
model.3 <- MCA (coffee[,1], graph = T, quali.sup = coffee[,2], row.w = coffee$frec)
model.3 <- MCA (coffee[,1:2], graph = T, row.w = coffee$frec)
model.3 <- MCA (coffee[,1:2], graph = T)
summary(model.3)
model.3 <- MCA (coffee[,1:2], quali.sup = coffee[, 2], graph = T)
model.3 <- MCA (coffee[,2], quali.sup = coffee[, 2], graph = T)
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=7, rotation="varimax", scores = "Bartlett")
fact.1
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1) ^ 2), decreasing=TRUE))
socioeconomica <- openxlsx::read.xlsx('./datos/Socioeconomica.xlsx')
str(socioeconomica)
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-c(Ano, Trimestre))
library(vegan)
mds.analysis <- metaMDS(socioeconomica, k=3, trymax = 1000, distance = "gower")
stressplot(mds.analysis)
mds.analysis
print(mds.analysis)
plot(mds.analysis, type='t')
library(plotly)
set.seed(97)
sil_width <- c()
samples <- 10
for(i in 2:10) #Hasta 10 clusters
{
clara_fit <- cluster::clara(mds.analysis$species,
k = i,
metric = "manhattan",
pamLike = T,
samples = samples)
sil_width[i] <- clara_fit$silinfo$avg.width
print(i)
}
sil_width[1]<-0 # Con un cluster no hay distancia, o la hay infinita, según como se quiera ver
resultadosM <- data.frame(k = 1:i, sil_width)
plotly::ggplotly(ggplot(data = resultadosM, aes(x = k, sil_width)) + geom_line() + geom_point() + labs(title = "Separación de los clusters", subtitle = "Anchura de la 'Silueta'"))
clara_fit <- cluster::clara(mds.analysis$species,
k = 7,
metric = "manhattan",
pamLike = T,
samples = samples)
plot(clara_fit, main = "Clustering con Clara")
clara_fit
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = clara_fit$clustering), ggtheme = theme_minimal(), main = "Clara")
modelo <- kmeans (mds.analysis$species, 7)
modelo
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = modelo$cluster), ggtheme = theme_minimal(), main="KMeans")
km.res <- kmeans(socioeconomica, 7, nstart = 5000)
factoextra::fviz_cluster(km.res, data = socioeconomica, frame.type = "convex")
dist.2 <- vegdist(mds.analysis$species, method = "gower")
hclust.2 <- hclust(dist.2, method="ward.D2", members = NULL)
plot(hclust.2, main = "Dendrograma", cex=0.7, hang=0.8)
library(foreign)
coffee <- read.spss('datos/Coffee.sav', to.data.frame = T)
str(coffee)
print(coffee)
library("FactoMineR")
library("factoextra")
summary(coffee)
i = 1
j = 1
df_tmp <- data.frame()
while (i <= nrow(coffee))
{
tmp <- coffee[i, 3]
while (j <= tmp)
{
df_tmp <- rbind(df_tmp, coffee[i,])
j = j + 1
}
j = 1
i = i + 1
}
df_tmp <- df_tmp %>% select("imagen", "marca")
df_tmp
resul.mca.3 <- MCA(df_tmp, quali.sup = 2, graph = T)
resul.mca.3
fviz_mca_Var(resul.mca.3, choice = "mca.cor", ggtheme = theme_minimal())
fviz_mca_var(resul.mca.3, choice = "mca.cor", ggtheme = theme_minimal())
fviz_mca_var(resul.mca.3, repel = T, ggtheme = theme_minimal())
socioeconomica <- openxlsx::read.xlsx('./datos/Socioeconomica.xlsx')
str(socioeconomica)
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-'Ano', -'Trimestre', -'Total.16-24', -'Total.25-54',-'Total.55-64',-'Total.Total')
library(vegan)
mds.analysis <- metaMDS(socioeconomica, k=3, trymax = 1000, distance = "gower")
stressplot(mds.analysis)
mds.analysis
print(mds.analysis)
plot(mds.analysis, type='t')
socioeconomica <- openxlsx::read.xlsx('./datos/Socioeconomica.xlsx')
str(socioeconomica)
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-'Ano', -'Trimestre', -'Total.16-24', -'Total.25-54',-'Total.55-64',-'Total.Total', -'Total.Jovenes', -'Total.No.Cualificadas', -'Parados.Larga.Duracion', -'Parados.Larga.Duracion.Jovenes')
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-'Ano', -'Trimestre', -'Total.16-24', -'Total.25-54',-'Total.55-64',-'Total.Total', -'Total.Jovenes', -'Total.No.cualificadas', -'Parados.Larga.Duracion', -'Parados.Larga.Duracion.Jovenes')
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-'Ano', -'Trimestre', -'Total.16-24', -'Total.25-54',-'Total.55-64',-'Total.Total', -'Total.Jovenes', -'Total.No.cualificadas', -'Parados.Larga.Duracion.16-67', -'Parados.Larga.Duracion.Jovenes')
library(vegan)
mds.analysis <- metaMDS(socioeconomica, k=3, trymax = 1000, distance = "gower")
stressplot(mds.analysis)
mds.analysis
print(mds.analysis)
plot(mds.analysis, type='t')
library(plotly)
set.seed(97)
sil_width <- c()
samples <- 10
for(i in 2:10) #Hasta 10 clusters
{
clara_fit <- cluster::clara(mds.analysis$species,
k = i,
metric = "manhattan",
pamLike = T,
samples = samples)
sil_width[i] <- clara_fit$silinfo$avg.width
print(i)
}
library(plotly)
set.seed(97)
sil_width <- c()
samples <- 10
for(i in 2:5) #Hasta 5 clusters
{
clara_fit <- cluster::clara(mds.analysis$species,
k = i,
metric = "manhattan",
pamLike = T,
samples = samples)
sil_width[i] <- clara_fit$silinfo$avg.width
print(i)
}
sil_width[1]<-0 # Con un cluster no hay distancia, o la hay infinita, según como se quiera ver
resultadosM <- data.frame(k = 1:i, sil_width)
plotly::ggplotly(ggplot(data = resultadosM, aes(x = k, sil_width)) + geom_line() + geom_point() + labs(title = "Separación de los clusters", subtitle = "Anchura de la 'Silueta'"))
clara_fit <- cluster::clara(mds.analysis$species,
k = 2,
metric = "manhattan",
pamLike = T,
samples = samples)
plot(clara_fit, main = "Clustering con Clara")
clara_fit
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = clara_fit$clustering), ggtheme = theme_minimal(), main = "Clara")
modelo <- kmeans (mds.analysis$species, 2)
modelo
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = modelo$cluster), ggtheme = theme_minimal(), main="KMeans")
km.res <- kmeans(socioeconomica, 2, nstart = 5000)
factoextra::fviz_cluster(km.res, data = socioeconomica, frame.type = "convex")
dist.2 <- vegdist(mds.analysis$species, method = "gower")
hclust.2 <- hclust(dist.2, method="ward.D2", members = NULL)
plot(hclust.2, main = "Dendrograma", cex=0.7, hang=0.8)
socioeconomica <- openxlsx::read.xlsx('./datos/Socioeconomica.xlsx')
str(socioeconomica)
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-'Ano', -'Trimestre', -'Total.16-24', -'Total.25-54',-'Total.55-64',-'Total.Total', -'Total.Jovenes', -'Total.No.cualificadas', -'Parados.Larga.Duracion.16-67', -'Parados.Larga.Duracion.Jovenes', -'Hombres.Total', -'Mujeres.Total')
library(vegan)
mds.analysis <- metaMDS(socioeconomica, k=3, trymax = 1000, distance = "gower")
stressplot(mds.analysis)
mds.analysis
print(mds.analysis)
plot(mds.analysis, type='t')
library(plotly)
set.seed(97)
sil_width <- c()
samples <- 10
for(i in 2:5) #Hasta 5 clusters
{
clara_fit <- cluster::clara(mds.analysis$species,
k = i,
metric = "manhattan",
pamLike = T,
samples = samples)
sil_width[i] <- clara_fit$silinfo$avg.width
print(i)
}
sil_width[1]<-0 # Con un cluster no hay distancia, o la hay infinita, según como se quiera ver
resultadosM <- data.frame(k = 1:i, sil_width)
plotly::ggplotly(ggplot(data = resultadosM, aes(x = k, sil_width)) + geom_line() + geom_point() + labs(title = "Separación de los clusters", subtitle = "Anchura de la 'Silueta'"))
clara_fit <- cluster::clara(mds.analysis$species,
k = 2,
metric = "manhattan",
pamLike = T,
samples = samples)
plot(clara_fit, main = "Clustering con Clara")
clara_fit
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = clara_fit$clustering), ggtheme = theme_minimal(), main = "Clara")
modelo <- kmeans (mds.analysis$species, 2)
modelo
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = modelo$cluster), ggtheme = theme_minimal(), main="KMeans")
km.res <- kmeans(socioeconomica, 2, nstart = 5000)
factoextra::fviz_cluster(km.res, data = socioeconomica, frame.type = "convex")
dist.2 <- vegdist(mds.analysis$species, method = "gower")
hclust.2 <- hclust(dist.2, method="ward.D2", members = NULL)
plot(hclust.2, main = "Dendrograma", cex=0.7, hang=0.8)
str(socioeconomica)
resul.mca.3 <- MCA(df_tmp, quali.sup = 2, graph = F)
resul.mca.3
fviz_mca_var(resul.mca.3, repel = T, ggtheme = theme_minimal())
fviz_mca_var(resul.mca.3, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE, ggtheme = theme_minimal())
fviz_contrib(resul.mca.3, choice = "var", axes = 1, top = 10)
fviz_contrib(resul.mca.3, choice = "var", axes = 2, top = 10)
fviz_contrib(resul.mca.3, choice = "var", axes = 3, top = 10)
fviz_contrib(resul.mca.3, choice = "var", axes = 1, top = 10)
fviz_contrib(resul.mca.3, choice = "var", axes = 2, top = 10)
fviz_mca_var(resul.mca.3, repel = TRUE, ggtheme= theme_minimal())
fviz_mca_var(resul.mca.3, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE, ggtheme = theme_minimal())
fviz_contrib(resul.mca.3, choice = "var", axes = 1, top = 10)
fviz_contrib(resul.mca.3, choice = "var", axes = 2, top = 10)
fviz_pca_var (resul.mca.3,
col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
axes = c(1,2),
repel = TRUE # Evita superponer textos
)
data("poison")
poi <- data("poison")
poi
data(poison)
poi <- data(poison)
force(poison)
library(foreign)
coffee <- read.spss('datos/Coffee.sav', to.data.frame = T)
str(coffee)
print(coffee)
library("FactoMineR")
library("factoextra")
summary(coffee)
coffee <- reshape2::dcast (coffee, imagen ~ marca)
coffee
balloonplot(t(as.table(as.matrix(coffee))))
help(balloonplot)
??balloonplot
install.packages(gplots)
install.packages("gplots")
library(gplots)
balloonplot(t(as.table(as.matrix(coffee))))
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3), main = "imagen", xlab ="", ylab ="", label = F, show.margins = F)
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3), main = "Imagenes vs Marcas", xlab ="", ylab ="", label = F, show.margins = F)
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3), main = "Imagenes vs Marcas", xlab ="", ylab ="", label = F, show.margins = T)
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3), main = "Imagenes vs Marcas", xlab ="", ylab ="", label = T, show.margins = F)
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3),
main = "Imagenes vs Marcas",
xlab ="",
ylab ="",
label = F,
show.margins = F)
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3),
main = "Imágenes vs Marcas",
xlab ="",
ylab ="",
label = F,
show.margins = F)
modelo.3 <- CA (df3, graph = F)
modelo.3
vexp.3 <- get_eigenvalue(modelo.3)
fviz_screeplot(modelo.3, addlabels = TRUE, ylim = c(0, 100))
fviz_mca_var(modelo.3, repel = TRUE, ggtheme= theme_minimal())
fviz_mca_var(modelo.3, col.var = "cos2", gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"), repel = TRUE, ggtheme = theme_minimal())
fviz_contrib(modelo.3, choice = "var", axes = 1, top = 10)
fviz_ca_biplot(modelo.3, repel = TRUE)
row <- get_ca_row(modelo.3)
row
fviz_ca_row(modelo.3, col.row="steelblue", shape.row = 15, repel = TRUE)
fviz_ca_row(modelo.3, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_ca_row(modelo.3, alpha.row="cos2")
library("corrplot")
library("corrplot")
corrplot(row$cos2, is.corr=FALSE)
fviz_cos2(res.ca, choice = "row", axes = 1:2)
fviz_cos2(modelo.3, choice = "row", axes = 1:2)
corrplot(row$contrib, is.corr=FALSE)
fviz_contrib(modelo.3, choice = "row", axes = 1, top = 10)
fviz_contrib(modelo.3, choice = "row", axes = 1, top = 10)
fviz_contrib(modelo.3, choice = "row", axes = 2, top = 10)
col <- get_ca_col(modelo.3)
col
fviz_ca_col(modelo.3)
fviz_cos2(modelo.3, choice = "col", axes = 1:2)
fviz_ca_biplot(modelo.3, map ="rowprincipal", arrow = c(TRUE, TRUE), repel = TRUE)
fviz_ca_biplot(modelo.3, map ="rowprincipal", arrow = c(TRUE, FALSE), repel = TRUE)
vexp.3 <- get_eigenvalue(modelo.3)
fviz_screeplot(modelo.3, addlabels = TRUE, ylim = c(0, 0))
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=7, rotation="varimax", scores = "Bartlett")
fact.1
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1) ^ 2), decreasing=TRUE))
socioeconomica <- openxlsx::read.xlsx('./datos/Socioeconomica.xlsx')
str(socioeconomica)
library(magrittr)
socioeconomica <- socioeconomica %>% dplyr::select(-'Ano', -'Trimestre', -'Total.16-24', -'Total.25-54',-'Total.55-64',-'Total.Total', -'Total.Jovenes', -'Total.No.cualificadas', -'Parados.Larga.Duracion.16-67', -'Parados.Larga.Duracion.Jovenes', -'Hombres.Total', -'Mujeres.Total')
str(socioeconomica)
library(vegan)
mds.analysis <- metaMDS(socioeconomica, k=3, trymax = 1000, distance = "gower")
stressplot(mds.analysis)
mds.analysis
print(mds.analysis)
plot(mds.analysis, type='t')
library(plotly)
set.seed(97)
sil_width <- c()
samples <- 10
for(i in 2:5) #Hasta 5 clusters
{
clara_fit <- cluster::clara(mds.analysis$species,
k = i,
metric = "manhattan",
pamLike = T,
samples = samples)
sil_width[i] <- clara_fit$silinfo$avg.width
print(i)
}
sil_width[1]<-0 # Con un cluster no hay distancia, o la hay infinita, según como se quiera ver
resultadosM <- data.frame(k = 1:i, sil_width)
plotly::ggplotly(ggplot(data = resultadosM, aes(x = k, sil_width)) + geom_line() + geom_point() + labs(title = "Separación de los clusters", subtitle = "Anchura de la 'Silueta'"))
clara_fit <- cluster::clara(mds.analysis$species,
k = 2,
metric = "manhattan",
pamLike = T,
samples = samples)
plot(clara_fit, main = "Clustering con Clara")
clara_fit
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = clara_fit$clustering), ggtheme = theme_minimal(), main = "Clara")
modelo <- kmeans (mds.analysis$species, 2)
modelo
factoextra::fviz_cluster(list (data = mds.analysis$species, cluster = modelo$cluster), ggtheme = theme_minimal(), main="KMeans")
km.res <- kmeans(socioeconomica, 2, nstart = 5000)
factoextra::fviz_cluster(km.res, data = socioeconomica, frame.type = "convex")
dist.2 <- vegdist(mds.analysis$species, method = "gower")
hclust.2 <- hclust(dist.2, method="ward.D2", members = NULL)
plot(hclust.2, main = "Dendrograma", cex=0.7, hang=0.8)
library(foreign)
coffee <- read.spss('datos/Coffee.sav', to.data.frame = T)
str(coffee)
print(coffee)
library("FactoMineR")
library("factoextra")
summary(coffee)
coffee <- reshape2::dcast(coffee, imagen ~ marca)
coffee
library(gplots)
filas <- as.character(coffee$imagen)
df3 <- as.table(as.matrix(coffee [,-1]))
rownames(df3) <- filas
balloonplot(t(df3),
main = "Imágenes vs Marcas",
xlab ="",
ylab ="",
label = F,
show.margins = F)
modelo.3 <- CA (df3, graph = F)
modelo.3
vexp.3 <- get_eigenvalue(modelo.3)
fviz_screeplot(modelo.3, addlabels = TRUE, ylim = c(0, 0))
fviz_ca_biplot(modelo.3, repel = TRUE)
row <- get_ca_row(modelo.3)
row
fviz_ca_row(modelo.3, col.row="steelblue", shape.row = 15, repel = TRUE)
fviz_ca_row(modelo.3, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_ca_row(modelo.3, alpha.row="cos2")
library("corrplot")
corrplot(row$cos2, is.corr=FALSE)
fviz_cos2(modelo.3, choice = "row", axes = 1:2)
corrplot(row$contrib, is.corr=FALSE)
fviz_contrib(modelo.3, choice = "row", axes = 1, top = 10)
fviz_contrib(modelo.3, choice = "row", axes = 2, top = 10)
col <- get_ca_col(modelo.3)
col
fviz_ca_col(modelo.3)
fviz_cos2(modelo.3, choice = "col", axes = 1:2)
fviz_ca_biplot(modelo.3, map ="rowprincipal", arrow = c(TRUE, FALSE), repel = TRUE)
library(MASS)
str(Cars93)
library(funModeling)
df_status(Cars93)
print(as.data.frame(Cars93))
library(CCA)
library(tidyverse)
matrizX <- Cars93 %>% dplyr::select(EngineSize, Horsepower,
Length, Wheelbase,
Width, Rear.seat.room,
Weight) %>% as.matrix()
matrizY <- Cars93 %>% dplyr::select(Price, MPG.city,
MPG.highway, Turn.circle) %>% as.matrix()
correl.2 <- matcor(matrizX, matrizY)
correl.2
img.matcor(correl.2, type = 2)
cc.2 <- cc(matrizX, matrizY)
barplot(cc.2$cor, xlab = "Dimensión",
ylab = "Value CC",
ylim = c(0,1))
plt.cc(cc.2, var.label = TRUE)
vexp.3 <- get_eigenvalue(modelo.3)
fviz_screeplot(modelo.3, addlabels = TRUE, ylim = c(0, 1))
vexp.3 <- get_eigenvalue(modelo.3)
fviz_screeplot(modelo.3, addlabels = TRUE, ylim = c(0, 100))
fviz_ca_biplot(modelo.3, repel = TRUE)
fviz_ca_biplot(modelo.3, map ="rowprincipal", arrow = c(TRUE, TRUE), repel = TRUE)
