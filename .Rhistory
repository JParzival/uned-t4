knitr::opts_chunk$set(echo = TRUE)
str(Cars93)
library(MASS)
str(Cars93)
library(ehd)
library(psy)
install.packages(psy)
install.packages(psy)
install.packages("psy")
library(psy)
str(ehd)
str(psy::ehd)
str("ehd")
str(ehd)
library(psy)
str(ehd)
data(ehd)
ehd <- data(ehd)
str(ehd)
library(psy)
ehd <- data(ehd)
str(ehd)
data(ehd)
str(ehd)
knitr::opts_chunk$set(echo = TRUE)
summary(ehd)
hist(ehd)
for x in ehd { hist(ehd$x)}
for (x in ehd) { hist(ehd$x) }
for (x in ehd$names) { hist(ehd$x) }
for (x in ehd$names) { hist(ehd$x) }
for (x in ehd$names) { hist(ehd$x) }
for (x in ehd$names) { hist(ehd$x) }
for (x in ehd$names) { print(hist(ehd$x)) }
for (x in ehd$names) { print(x) }
for (x in ehd$colnames) { print(x) }
for (x in ehd$col.names) { print(x) }
for (x in ehd$colnames) { print(x) }
for (x in ehd$colnames) { print(ehd$x) }
for (x in colnames(ehd)) { print(ehd$x) }
for (x in colnames(ehd)) { print(x) }
for (x in colnames(ehd)) { hist(x) }
for (x in colnames(ehd)) { hist(ehd$x) }
for (x in colnames(ehd)) { hist(ehd[[x]]) }
for (x in colnames(ehd)) { hist(ehd[[x]], main=x) }
for (x in colnames(ehd)) { barplot(ehd[[x]], main=x) }
for (x in colnames(ehd)) { hist(ehd[[x]], main=x) }
for (x in colnames(ehd)) { hist(ehd[[x]], main=x, col= colors) }
for (x in colnames(ehd)) { hist(ehd[[x]], main=x, col= colors[ehd[[x]]]) }
hist(tmp, main=x, col= colors[tmp])
colors = c("white","green","blue", "red", "black")
for (x in colnames(ehd)) {
tmp <- ehd[[x]]
hist(tmp, main=x, col= colors[tmp])
}
```{r}
for (x in colnames(ehd)) {
tmp <- ehd[[x]]
hist(tmp, main=x)
}
colors = rainbow(length(unique(tmp)));
for (x in colnames(ehd)) {
tmp <- ehd[[x]]
colors = rainbow(length(unique(tmp)));
hist(tmp, main=x)
}
hist(tmp, main=x, col=colors)
for (x in colnames(ehd)) {
tmp <- ehd[[x]]
colors = rainbow(length(unique(tmp)));
hist(tmp, main=x, col=colors)
}
hist(tmp, main=x, col=colors[tmp])
for (x in colnames(ehd)) {
tmp <- ehd[[x]]
colors = rainbow(length(unique(tmp)));
hist(tmp, main=x, col=colors[tmp])
}
for (x in colnames(ehd)) {
tmp <- ehd[[x]]
hist(tmp, main=x)
}
is.na(ehd)
table(is.na(ehd))
correl <- cor(ehd,use="pairwise.complete.obs")
correl
plot(correl)
correl
corr.plot(correl)
correl
corrplot(ehd)
library(corrplot)
install.packages(corrplot)
install.packages("corrplot")
library(corrplot)
correl <- cor(ehd,use="pairwise.complete.obs")
correl
correl
corrplot(ehd)
corrplot(ehd)
corrplot(correl)
library(corrplot)
correl <- cor(ehd, use="pairwise.complete.obs")
correl
corrplot(correl)
correl[correl > 0.85]
table(correl[correl > 0.85])
corrplot(correl, type="upper")
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
install.libraries("psych")
install.packages("psych")
library(psych)
cortest.bartlett(ehd)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
fa.parallel(correl, n.obs = length(ehd), fm = "gls")
fa.parallel(correl, n.obs = length(ehd), fm = "mco")
fa.parallel(correl, n.obs = length(ehd), fm = "ols")
clear
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
det(corr)
det(correl)
plot (pc.1)
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ols", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
plot (pc.1, main="Principal components")
cortest.bartlett(correl)
cortest.bartlett(ehd)
fa.parallel(correl, n.obs = length(ehd), fm = "ml")
fa.parallel(correl, n.obs = length(ehd), fm = "ml")
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
fa.parallel(correl, n.obs = length(ehd), fm = "ols")
fa.parallel(correl, n.obs = length(ehd), fm = "pa")
fa.parallel(correl, n.obs = length(ehd), fm = "minres")
fa.parallel(correl, n.obs = length(ehd), fm = "ml")
fact.1 <-factanal(ehd, factors=7, rotation="varimax", scores = "Bartlett")
fact.1
barplot(fact.1$Eigenvalues[,1]) # Primera columna de valores propios.
barplot(fact.1$factors) # Primera columna de valores propios.
barplot(fact.1$uniquenesses) # Primera columna de valores propios.
barplot(fact.1$loadings) # Primera columna de valores propios.
barplot(varimax(fact.1$loadings)) # Primera columna de valores propios.
varimax(fact.1$loadings) # Primera columna de valores propios.
# Primera columna de valores propios.
print(varimax(fact.1$loadings))
# Primera columna de valores propios.
varimax(fact.1$loadings)
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1)^2),decreasing=TRUE))
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 10, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=10, rotation="varimax", scores = "Bartlett")
fact.1
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1) ^ 2), decreasing=TRUE))
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 9, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=9, rotation="varimax", scores = "Bartlett")
fact.1
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=7, rotation="varimax", scores = "Bartlett")
fact.1
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1) ^ 2), decreasing=TRUE))
fviz_screeplot(pc.1, addlabels = T, ylim = c(0,60))
library(factoextra)
library(factoextra)
install.packages("factoextra")
install.packages("factoextra")
install.packages("factoextra")
install.packages("factoextra")
knitr::opts_chunk$set(echo = TRUE)
library(factoextra)
fviz_screeplot(pc.1, addlabels = T, ylim = c(0,60))
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
library(factoextra)
fviz_screeplot(pc.1, addlabels = T, ylim = c(0,60))
detach("factoextra")
detach(factoextra)
detach("factoextra")
detach("package:factoextra", unload = TRUE)
library(factoextra)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
library(factoextra)
fviz_screeplot(pc.1, addlabels = T, ylim = c(0,60))
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
library(factoextra)
fviz_screeplot(pc.1, addlabels = T, ylim = c(0,60))
library(funModeling)
install.packages("funModeling")
library(funModeling)
df_status(Cars93)
library(funModeling)
(funModeling)
df_status(Cars93)
install.packages(c("arules", "backports", "bookdown", "callr", "car", "carData", "dplyr", "ellipsis", "foreach", "ggplot2", "glmnet", "glue", "gtools", "haven", "isoband", "lme4", "maptools", "openxlsx", "pillar", "pkgbuild", "pkgload", "ps", "purrr", "quantreg", "Rcpp", "rlang", "rmarkdown", "scales", "sp", "tinytex", "withr", "xfun", "zoo"))
install.packages(c("arules", "backports", "bookdown", "callr", "car", "carData", "dplyr", "ellipsis", "foreach", "ggplot2", "glmnet", "glue", "gtools", "haven", "isoband", "lme4", "maptools", "openxlsx", "pillar", "pkgbuild", "pkgload", "ps", "purrr", "quantreg", "Rcpp", "rlang", "rmarkdown", "scales", "sp", "tinytex", "withr", "xfun", "zoo"))
knitr::opts_chunk$set(echo = TRUE)
library(funModeling)
library(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(funModeling)
library(funModeling)
df_status(Cars93)
library(MASS)
str(Cars93)
library(funModeling)
df_status(Cars93)
df_status(Cars93)
library(funModeling)
df_status(Cars93)
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=7, rotation="varimax", scores = "Bartlett")
fact.1
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1) ^ 2), decreasing=TRUE))
library(MASS)
str(Cars93)
library(funModeling)
df_status(Cars93)
as.data.frame(Cars93)
print(as.data.frame(Cars93))
print(as.data.frame(Cars93))
knitr::opts_chunk$set(echo = TRUE)
library(psy)
data(ehd)
str(ehd)
summary(ehd)
for (x in colnames(ehd))
{
tmp <- ehd[[x]]
hist(tmp, main=x)
}
table(is.na(ehd))
library(corrplot)
correl <- cor(ehd, method="spearman")
correl
corrplot(correl, type="upper")
library(psych)
cortest.bartlett(ehd)
det(correl)
pc.1 <- princomp(ehd, cor=TRUE)
summary(pc.1, loadings=TRUE)
plot(pc.1, main="Principal components")
pc.1.ps <- fa(correl, n.obs = length(ehd), fm = "ml", nfactors = 7, rotate ="varimax")
print(pc.1.ps)
fact.1 <- factanal(ehd, factors=7, rotation="varimax", scores = "Bartlett")
fact.1
sedim.1 <- varimax(fact.1$loadings)
sedim.1
barplot(sort(colSums(loadings(sedim.1) ^ 2), decreasing=TRUE))
library(MASS)
str(Cars93)
library(funModeling)
df_status(Cars93)
print(as.data.frame(Cars93))
library(CCA)
install.packages("CCA")
library(CCA)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
matrizX <- as.matrix(data %>% select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight))
matrizX <- as.matrix(data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight))
library(dplyr)
matrizX <- as.matrix(data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight))
matrizX <- data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
matrizX <- data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
library(CCA)
library(tidyverse)
matrizX <- data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
matrizX <- data %>% dplyr::select_(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
matrizX <- data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
matrizX <- data %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
matrizX <- Cars93 %>% dplyr::select(EngineSize,Horsepower,Length,Wheelbase,Width,Rear.seat.room,Weight) %>% as.matrix()
matrizY <- Cars93 %>% dplyr::select(price, MPG.city,
MPG.highway, Turn.circle) %>% as.matrix()
matrizY <- Cars93 %>% dplyr::select(Price, MPG.city,
MPG.highway, Turn.circle) %>% as.matrix()
correl.2 <- matcor(matrizX, matrizY)
correl.2
img.matcor(correl, type = 2)
img.matcor(correl.2, type = 2)
library(CCA)
library(tidyverse)
matrizX <- Cars93 %>% dplyr::select(EngineSize, Horsepower,
Length, Wheelbase,
Width, Rear.seat.room,
Weight) %>% as.matrix()
matrizY <- Cars93 %>% dplyr::select(Price, MPG.city,
MPG.highway, Turn.circle) %>% as.matrix()
correl.2 <- matcor(matrizX, matrizY)
correl.2
img.matcor(correl.2, type = 2)
img.matcor(correl.2, type = 1)
img.matcor(correl.2, type = 2)
img.matcor(correl.2, type = 3)
img.matcor(correl.2, type = 4)
img.matcor(correl.2, type = 2)
img.matcor(correl.2, type = 1)
img.matcor(correl.2, type = 2)
cc.2 <- cc(matrizX, matrizY)
barplot(cc.2$cor, xlab = "Dimension", ylab = "Canonical correlations", names.arg = 1:3, ylim = c(0,1))
barplot(cc.2$cor, xlab = "Dimension", ylab = "Canonical correlations", ylim = c(0,1))
barplot(cc.2$cor, xlab = "Dimension", ylab = "Canonical correlations", ylim = c(0,2))
barplot(cc.2$cor, xlab = "Dimension", ylab = "Canonical correlations", ylim = c(0,1))
barplot(cc.2$cor, xlab = "Dimensión",
ylab = "Value CC",
ylim = c(0,1))
plt.cc(cc.2, var.label = TRUE)
